{"version":3,"file":"static/webpack/static\\development\\pages\\lyrics_list.js.7129e9f40be9b36824ad.hot-update.js","sources":["webpack:///./components/LyricsList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport Router from \"next/router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectData } from \"../modules/sagas\";\r\nimport axios from \"axios\";\r\n\r\nconst LyricsList = ({ data }) => {\r\n  const select = useSelector(state => state.select);\r\n  const [lyrics, setLyrics] = useState(data);\r\n  const [checked, setChecked] = useState([]);\r\n  const dispatch = useDispatch();\r\n  // init\r\n  useEffect(() => {\r\n    addEventListener(\"scroll\", scrollHandler);\r\n    console.log(select);\r\n    select.length !== 0 && setLyrics(select);\r\n  }, [select]);\r\n  // scroll event\r\n  const scrollHandler = () => {\r\n    const { innerHeight } = window;\r\n    const { scrollHeight } = document.body;\r\n    // IE에서는 document.documentElement 를 사용.\r\n    const scrollTop =\r\n      (document.documentElement && document.documentElement.scrollTop) ||\r\n      document.body.scrollTop;\r\n    // 스크롤링 했을때, 브라우저의 가장 밑에서 100정도 높이가 남았을때에 실행하기위함.\r\n    if (scrollHeight - innerHeight - scrollTop < 100) {\r\n      dispatch(selectData()); // 넣어준 값으로 다시 뿌려줄 준비하기\r\n    }\r\n  };\r\n  // checkbox event\r\n  const checkboxHandler = e => {\r\n    if (e.target.checked) {\r\n      const val = e.target.value.split(\"#\");\r\n      const id = e.target.id;\r\n      setChecked(\r\n        checked.concat({\r\n          id: id,\r\n          title: val[0],\r\n          code: val[1] !== \"undefined\" ? `(${val[1]})` : ``,\r\n          file: val[2] !== \"undefined\" ? val[2] : ``\r\n        })\r\n      );\r\n    } else {\r\n      const id = e.target.id;\r\n      setChecked(checked.filter(el => el.id !== id));\r\n    }\r\n  };\r\n  const removeChecked = id => {\r\n    const el = document.getElementById(id);\r\n    el.checked = false;\r\n    setChecked(checked.filter(e2 => e2.id !== id));\r\n  };\r\n  const checkedList = () => {\r\n    const id = checked.map(e => e.id.split(\"title_\")[1] * 1);\r\n    return id;\r\n  };\r\n  const downloadFile = name => {\r\n    axios({\r\n      url: `http://localhost:3001/uploads/${name}`,\r\n      method: \"GET\",\r\n      responseType: \"blob\" // important\r\n    }).then(response => {\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", name);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    });\r\n  };\r\n  const downloadFiles = () => {\r\n    const li = checkedList().map(e => `id=${e}&`);\r\n    if (!li || li.length === 0) {\r\n      alert(\"다운로드 할 악보가 없습니다. 악보를 선택해 주세요\");\r\n      return;\r\n    }\r\n    //나중에는 zip파일로 다운받도록 만들어보자\r\n    const files = checked.map(e => e.file);\r\n    files.forEach(name => {\r\n      downloadFile(name);\r\n    });\r\n  };\r\n  const createPpt = () => {\r\n    const li = checkedList().map(e => `id=${e}&`);\r\n    if (!li || li.length === 0) {\r\n      alert(\"PPT를 생성할 악보가 없습니다. 악보를 선택해 주세요\");\r\n      return;\r\n    }\r\n    let str = li.join(\"\");\r\n    str = str.substring(0, str.length - 1);\r\n    Router.push(\"/lyrics_check_view?\" + str);\r\n  };\r\n  const searching = e => {\r\n    if (e.keyCode === 13) {\r\n      dispatch(selectData(encodeURI(e.target.value)));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Layout title=\"가사목록페이지\">\r\n        <div className=\"container \">\r\n          <div\r\n            className=\"input-group mb-3\"\r\n            style={{ margin: \"20px 0px 0px 0px\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"제목 또는 가사를 입력해 주세요\"\r\n              onKeyDown={searching}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button className=\"input-group-text\">\r\n                <i className=\"fas fa-search\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-9\">\r\n              {lyrics.map(e => {\r\n                return (\r\n                  <div\r\n                    key={e.l_id}\r\n                    className=\"card\"\r\n                    style={{\r\n                      width: \"16rem\",\r\n                      float: \"left\",\r\n                      margin: \"0px 10px 10px 0px\"\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        e.file\r\n                          ? `http://localhost:3001/uploads/${e.file}`\r\n                          : `./static/no_img.gif`\r\n                      }\r\n                      className=\"card-img-top\"\r\n                    />\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title\">\r\n                        <span>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id={`title_${e.l_id}`}\r\n                            value={e.title + \"#\" + e.code + \"#\" + e.file}\r\n                            onChange={checkboxHandler}\r\n                            style={{ width: \"20px\", cursor: \"pointer\" }}\r\n                          />\r\n                          <label\r\n                            htmlFor={`title_${e.l_id}`}\r\n                            style={{ cursor: \"pointer\" }}\r\n                          >\r\n                            {e.title + \" \" + (e.code ? `(${e.code})` : ``)}\r\n                          </label>\r\n                        </span>\r\n                      </h5>\r\n                      <p className=\"card-text\">{e.contents[0].statement}</p>\r\n\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        style={{ float: \"left\" }}\r\n                        onClick={() => downloadFile(e.file)}\r\n                      >\r\n                        악보 다운로드\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div style={{ overflow: \"auto\" }}>\r\n              <div\r\n                className=\"col-sm-3 position-fixed border\"\r\n                style={{ padding: \"15px\" }}\r\n              >\r\n                <h4 className=\"text-center\">가사 제목</h4>\r\n                <p />\r\n                <ul className=\"list-group list-group-flush\">\r\n                  {/* 반복시작 */}\r\n                  {checked.map((el, i) => {\r\n                    return (\r\n                      <li\r\n                        key={i}\r\n                        className=\"list-group-item\"\r\n                        style={{ verticalAlign: \"center\" }}\r\n                      >\r\n                        {el.title + \" \" + el.code}\r\n                        <i\r\n                          className=\"fas fa-window-close\"\r\n                          style={{\r\n                            color: \"red\",\r\n                            cursor: \"pointer\",\r\n                            float: \"right\",\r\n                            fontSize: \"20px\"\r\n                          }}\r\n                          onClick={() => removeChecked(el.id)}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                  {/* 반복끝 */}\r\n                </ul>\r\n                <p />\r\n                <div className=\"text-center\">\r\n                  <button className=\"btn btn-success\" onClick={createPpt}>\r\n                    PPT 생성\r\n                  </button>\r\n                  <p />\r\n                  <button className=\"btn btn-primary\" onClick={downloadFiles}>\r\n                    악보다운로드\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LyricsList;\r\n"],"mappings":"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","sourceRoot":""}