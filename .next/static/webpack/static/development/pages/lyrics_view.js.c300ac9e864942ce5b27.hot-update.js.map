{"version":3,"file":"static/webpack/static\\development\\pages\\lyrics_view.js.c300ac9e864942ce5b27.hot-update.js","sources":["webpack:///./components/View.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Layout from \"./Layout\";\r\n\r\nconst styleSheet = {\r\n  container: {\r\n    background: \"black\",\r\n    height: \"1000px\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    paddingTop: \"30px\",\r\n    fontSize: \"4em\"\r\n  }\r\n};\r\nconst View = ({data}) => {\r\n  const contentsHandler = data => {\r\n    let title = data.map(e => e.title);\r\n    let contents = data.map(e => e.contents);\r\n    let arrayFinal = [];\r\n    contents.forEach((item, i) => {\r\n      let array = [];\r\n      let statementArr = item.map(e => e.statement);\r\n      statementArr.forEach((item2, i2) => {\r\n        let arr = [];\r\n        let str = \"\";\r\n        let splitArr = item2.split(\"\\n\");\r\n        splitArr.forEach((item3, i3) => {\r\n          str += item3 + \"\\n\";\r\n          if (i3 % 2 !== 0) {\r\n            arr.push(str.substring(0, str.length - 1));\r\n            str = \"\";\r\n          }\r\n        });\r\n        array.push(arr);\r\n        arr = [];\r\n      });\r\n      let obj = { title: title[i], contents: array };\r\n      arrayFinal.push(obj);\r\n    });\r\n    arrayFinal.forEach(item => {\r\n      let arr = [];\r\n      item.contents.forEach(item2 => {\r\n        arr = arr.concat(item2);\r\n      });\r\n      item.contents = arr;\r\n    });\r\n    return arrayFinal;\r\n  };\r\n  const [lyrics, setLyrics] = useState(contentsHandler(data));\r\n  return (\r\n    <Layout title=\"View\">\r\n      <div style={styleSheet.container}>View</div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default View;\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AACA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;AAAA;AAAA;AACA;AAkCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}