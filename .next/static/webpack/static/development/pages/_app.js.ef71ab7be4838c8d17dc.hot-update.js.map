{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.ef71ab7be4838c8d17dc.hot-update.js","sources":["webpack:///./modules/lyrics.js"],"sourcesContent":["// action\r\nconst CHANGE_HANDLER = \"lyrics/CHANGE_HANDLER\";\r\nconst LOGIN_HANDLER = \"lyrics/LOGIN_HANDLER\";\r\n//action creator\r\nexport const changeHandler = e => ({ type: CHANGE_HANDLER, e });\r\nexport const lognHandler = () => ({ type: LOGIN_HANDLER });\r\n// initialState\r\nconst initialState = {};\r\n\r\n//Reducers\r\nconst lyrics = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_HANDLER:\r\n      return onChangeHandler(state, action.e);\r\n    case LOGIN_HANDLER:\r\n      return onLoginHandler(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// create functions\r\n// 값이 변경될 때마다 값에 대한 내용을 넣어줌 // 사용안할듯\r\nconst onChangeHandler = (state, e) => {\r\n  e.target && (state = { ...state, [e.target.name]: e.target.value });\r\n  if (e.target.value === \"\") {\r\n    delete state[e.target.name];\r\n  }\r\n  if (e.target.name === \"file\") {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", e.target.files[0]);\r\n    state = { ...state, formData };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst onLoginHandler = state => {\r\n  console.log(\"onLoginHandler\");\r\n};\r\nexport default lyrics;\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AAGA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}