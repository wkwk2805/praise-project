{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.1d94d1887de1d166d4cd.hot-update.js","sources":["webpack:///./modules/sagas.js"],"sourcesContent":["import { call, put, takeEvery, all } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { axiosResult, axiosError } from \"./async\";\r\n\r\nconst INSERT_DATA = \"sagas/INSERT_DATA\"; // 이 액션으로 체킹해서 호출\r\nconst UPDATE_DATA = \"sagas/UPDATE_DATA\";\r\nconst DELETE_DATA = \"sagas/DELETE_DATA\";\r\n\r\nexport const insertData = param => ({\r\n  type: INSERT_DATA,\r\n  payload: \"put\",\r\n  param: param\r\n});\r\nexport const updateData = () => ({ type: UPDATE_DATA, payload: \"patch\" });\r\nexport const deleteData = () => ({ type: DELETE_DATA, payload: \"delete\" });\r\n\r\nconst axiosData = (payload, param) =>\r\n  axios[payload](`http://localhost:3001/api`, param);\r\n\r\n// dispatch => checking =>\r\nfunction* onAxiosData(action) {\r\n  try {\r\n    const res = yield axiosData(action.payload, action.param);\r\n    yield put(axiosResult(res));\r\n  } catch (error) {\r\n    yield put(axiosError());\r\n  }\r\n}\r\n\r\nfunction* axiosSaga() {\r\n  yield takeEvery(INSERT_DATA, onAxiosData);\r\n  yield takeEvery(UPDATE_DATA, onAxiosData);\r\n  yield takeEvery(DELETE_DATA, onAxiosData);\r\n}\r\n\r\nexport function* rootSaga() {\r\n  yield all([axiosSaga()]);\r\n}\r\n\r\nexport default rootSaga;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAoBA;;;AASA;;;AAMA;AACA;AApCA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AAFA;AAGA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}