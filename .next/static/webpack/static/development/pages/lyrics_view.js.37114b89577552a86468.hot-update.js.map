{"version":3,"file":"static/webpack/static\\development\\pages\\lyrics_view.js.37114b89577552a86468.hot-update.js","sources":["webpack:///./components/View.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport { contentsHandler, arrayHandler } from \"../util/handler\";\r\n\r\nconst styleSheet = {\r\n  container: {\r\n    background: \"black\",\r\n    height: \"780px\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    fontSize: \"3.5em\"\r\n  },\r\n  title: {\r\n    fontSize: \"1em\",\r\n    textAlign: \"left\",\r\n    background: \"black\",\r\n    color: \"white\",\r\n    padding: \"15px 0px 65px 15px\"\r\n  }\r\n};\r\n\r\nconst View = ({ data, initData }) => {\r\n  const targetRef = useRef();\r\n  const [lyrics, setLyrics] = useState(contentsHandler(data));\r\n  const ls = arrayHandler(lyrics);\r\n  const [list, setList] = useState(ls.filter(e => e.id === initData)[0]);\r\n  useEffect(() => {\r\n    keyDownHandler();\r\n    window.community = function(id) {\r\n      setList(ls.filter(e => e.id === id)[0]);\r\n    };\r\n  }, []);\r\n  const keyDownHandler = () => {\r\n    window.addEventListener(\"keydown\", e => {\r\n      e.keyCode !== 122 && e.preventDefault();\r\n      switch (e.keyCode) {\r\n        case 38: // 위\r\n          backMove();\r\n          break;\r\n        case 40: // 아래\r\n          frontMove();\r\n          break;\r\n        case 37: // 왼\r\n          backMove();\r\n          break;\r\n        case 39: // 오\r\n          frontMove();\r\n          break;\r\n        case 13: //엔터\r\n          frontMove();\r\n          break;\r\n        case 32: //스페이스\r\n          frontMove();\r\n          break;\r\n        case 27: // esc\r\n          window.close();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  };\r\n  const frontMove = () => {\r\n    let idxs = ls.map((e, i) => {\r\n      if (e.id === targetRef.current.id) {\r\n        return i;\r\n      }\r\n    });\r\n    let idx = idxs.filter(e => e !== undefined)[0];\r\n    if (list && list.title && list.id && idx + 1 !== ls.length) {\r\n      let li = ls[idx + 1];\r\n      setList(li);\r\n      window.opener.communityMove(li.id);\r\n    } else {\r\n      alert(\"마지막 페이지 입니다.\");\r\n    }\r\n  };\r\n  const backMove = () => {\r\n    let idxs = ls.map((e, i) => {\r\n      if (e.id === targetRef.current.id) {\r\n        return i;\r\n      }\r\n    });\r\n    let idx = idxs.filter(e => e !== undefined)[0];\r\n    if (list && list.title && list.id && idx - 1 !== -1) {\r\n      let li = ls[idx - 1];\r\n      setList(li);\r\n      window.opener.communityMove(li.id);\r\n    } else {\r\n      alert(\"처음 페이지 입니다.\");\r\n    }\r\n  };\r\n  return (\r\n    <Layout title=\"View\">\r\n      <div style={styleSheet.title}>{list.title}</div>\r\n      <div style={styleSheet.container} id={list.id} ref={targetRef}>\r\n        {(list.contents + \"\").split(\"\\n\").map((it, i) => {\r\n          return (\r\n            <span key={i}>\r\n              {it}\r\n              <br />\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default View;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AACA;AAgBA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAJA;AAIA;AAAA;AAJA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAvBA;AAyBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AACA;;;;A","sourceRoot":""}